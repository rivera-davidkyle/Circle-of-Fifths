{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator, getBooleanValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Arc extends Shape {\n  _sceneFunc(context) {\n    var angle = Konva.getAngle(this.angle()),\n        clockwise = this.clockwise();\n    context.beginPath();\n    context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n    context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n\n  getWidth() {\n    return this.outerRadius() * 2;\n  }\n\n  getHeight() {\n    return this.outerRadius() * 2;\n  }\n\n  setWidth(width) {\n    this.outerRadius(width / 2);\n  }\n\n  setHeight(height) {\n    this.outerRadius(height / 2);\n  }\n\n  getSelfRect() {\n    const innerRadius = this.innerRadius();\n    const outerRadius = this.outerRadius();\n    const clockwise = this.clockwise();\n    const angle = Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n    const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n    const boundRightRatio = 1;\n    const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), 3 * Math.PI / 2));\n    const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n    const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n    const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n    const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n    const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n    return {\n      x: boundLeft,\n      y: clockwise ? -1 * boundBottom : boundTop,\n      width: boundRight - boundLeft,\n      height: boundBottom - boundTop\n    };\n  }\n\n}\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n\n_registerNode(Arc);\n\nFactory.addGetterSetter(Arc, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'outerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'clockwise', false, getBooleanValidator());","map":{"version":3,"sources":["/home/drivera1/circle_fifths/circle-fifths/node_modules/konva/lib/shapes/Arc.js"],"names":["Factory","Shape","Konva","getNumberValidator","getBooleanValidator","_registerNode","Arc","_sceneFunc","context","angle","getAngle","clockwise","beginPath","arc","outerRadius","innerRadius","closePath","fillStrokeShape","getWidth","getHeight","setWidth","width","setHeight","height","getSelfRect","boundLeftRatio","Math","cos","min","PI","boundRightRatio","boundTopRatio","sin","max","boundBottomRatio","boundLeft","boundRight","boundTop","boundBottom","x","y","prototype","_centroid","className","_attrsAffectingSize","addGetterSetter"],"mappings":"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","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator, getBooleanValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Arc extends Shape {\n    _sceneFunc(context) {\n        var angle = Konva.getAngle(this.angle()), clockwise = this.clockwise();\n        context.beginPath();\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n    getSelfRect() {\n        const innerRadius = this.innerRadius();\n        const outerRadius = this.outerRadius();\n        const clockwise = this.clockwise();\n        const angle = Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n        const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n        const boundRightRatio = 1;\n        const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), (3 * Math.PI) / 2));\n        const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n        const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n        const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n        const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n        const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n        return {\n            x: boundLeft,\n            y: clockwise ? -1 * boundBottom : boundTop,\n            width: boundRight - boundLeft,\n            height: boundBottom - boundTop,\n        };\n    }\n}\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Arc);\nFactory.addGetterSetter(Arc, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'outerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'clockwise', false, getBooleanValidator());\n"]},"metadata":{},"sourceType":"module"}