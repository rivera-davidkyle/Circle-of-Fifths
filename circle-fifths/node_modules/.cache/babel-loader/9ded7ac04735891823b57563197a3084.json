{"ast":null,"code":"import { Konva } from './Global.js';\nimport { Transform, Util } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator, getNumberOrAutoValidator, getStringValidator, getBooleanValidator, getStringOrGradientValidator } from './Validators.js';\nimport { _registerNode } from './Global.js';\nimport * as PointerEvents from './PointerEvents.js';\nvar HAS_SHADOW = 'hasShadow';\nvar SHADOW_RGBA = 'shadowRGBA';\nvar patternImage = 'patternImage';\nvar linearGradient = 'linearGradient';\nvar radialGradient = 'radialGradient';\nlet dummyContext;\n\nfunction getDummyContext() {\n  if (dummyContext) {\n    return dummyContext;\n  }\n\n  dummyContext = Util.createCanvasElement().getContext('2d');\n  return dummyContext;\n}\n\nexport const shapes = {};\n\nfunction _fillFunc(context) {\n  context.fill();\n}\n\nfunction _strokeFunc(context) {\n  context.stroke();\n}\n\nfunction _fillFuncHit(context) {\n  context.fill();\n}\n\nfunction _strokeFuncHit(context) {\n  context.stroke();\n}\n\nfunction _clearHasShadowCache() {\n  this._clearCache(HAS_SHADOW);\n}\n\nfunction _clearGetShadowRGBACache() {\n  this._clearCache(SHADOW_RGBA);\n}\n\nfunction _clearFillPatternCache() {\n  this._clearCache(patternImage);\n}\n\nfunction _clearLinearGradientCache() {\n  this._clearCache(linearGradient);\n}\n\nfunction _clearRadialGradientCache() {\n  this._clearCache(radialGradient);\n}\n\nexport class Shape extends Node {\n  constructor(config) {\n    super(config);\n    let key;\n\n    while (true) {\n      key = Util.getRandomColor();\n\n      if (key && !(key in shapes)) {\n        break;\n      }\n    }\n\n    this.colorKey = key;\n    shapes[key] = this;\n  }\n\n  getContext() {\n    Util.warn('shape.getContext() method is deprecated. Please do not use it.');\n    return this.getLayer().getContext();\n  }\n\n  getCanvas() {\n    Util.warn('shape.getCanvas() method is deprecated. Please do not use it.');\n    return this.getLayer().getCanvas();\n  }\n\n  getSceneFunc() {\n    return this.attrs.sceneFunc || this['_sceneFunc'];\n  }\n\n  getHitFunc() {\n    return this.attrs.hitFunc || this['_hitFunc'];\n  }\n\n  hasShadow() {\n    return this._getCache(HAS_SHADOW, this._hasShadow);\n  }\n\n  _hasShadow() {\n    return this.shadowEnabled() && this.shadowOpacity() !== 0 && !!(this.shadowColor() || this.shadowBlur() || this.shadowOffsetX() || this.shadowOffsetY());\n  }\n\n  _getFillPattern() {\n    return this._getCache(patternImage, this.__getFillPattern);\n  }\n\n  __getFillPattern() {\n    if (this.fillPatternImage()) {\n      var ctx = getDummyContext();\n      const pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || 'repeat');\n\n      if (pattern && pattern.setTransform) {\n        const tr = new Transform();\n        tr.translate(this.fillPatternX(), this.fillPatternY());\n        tr.rotate(Konva.getAngle(this.fillPatternRotation()));\n        tr.scale(this.fillPatternScaleX(), this.fillPatternScaleY());\n        tr.translate(-1 * this.fillPatternOffsetX(), -1 * this.fillPatternOffsetY());\n        const m = tr.getMatrix();\n        const matrix = typeof DOMMatrix === 'undefined' ? {\n          a: m[0],\n          b: m[1],\n          c: m[2],\n          d: m[3],\n          e: m[4],\n          f: m[5]\n        } : new DOMMatrix(m);\n        pattern.setTransform(matrix);\n      }\n\n      return pattern;\n    }\n  }\n\n  _getLinearGradient() {\n    return this._getCache(linearGradient, this.__getLinearGradient);\n  }\n\n  __getLinearGradient() {\n    var colorStops = this.fillLinearGradientColorStops();\n\n    if (colorStops) {\n      var ctx = getDummyContext();\n      var start = this.fillLinearGradientStartPoint();\n      var end = this.fillLinearGradientEndPoint();\n      var grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n\n      for (var n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n\n      return grd;\n    }\n  }\n\n  _getRadialGradient() {\n    return this._getCache(radialGradient, this.__getRadialGradient);\n  }\n\n  __getRadialGradient() {\n    var colorStops = this.fillRadialGradientColorStops();\n\n    if (colorStops) {\n      var ctx = getDummyContext();\n      var start = this.fillRadialGradientStartPoint();\n      var end = this.fillRadialGradientEndPoint();\n      var grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\n\n      for (var n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n\n      return grd;\n    }\n  }\n\n  getShadowRGBA() {\n    return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n  }\n\n  _getShadowRGBA() {\n    if (this.hasShadow()) {\n      var rgba = Util.colorToRGBA(this.shadowColor());\n      return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + rgba.a * (this.shadowOpacity() || 1) + ')';\n    }\n  }\n\n  hasFill() {\n    return this._calculate('hasFill', ['fillEnabled', 'fill', 'fillPatternImage', 'fillLinearGradientColorStops', 'fillRadialGradientColorStops'], () => {\n      return this.fillEnabled() && !!(this.fill() || this.fillPatternImage() || this.fillLinearGradientColorStops() || this.fillRadialGradientColorStops());\n    });\n  }\n\n  hasStroke() {\n    return this._calculate('hasStroke', ['strokeEnabled', 'strokeWidth', 'stroke', 'strokeLinearGradientColorStops'], () => {\n      return this.strokeEnabled() && this.strokeWidth() && !!(this.stroke() || this.strokeLinearGradientColorStops());\n    });\n  }\n\n  hasHitStroke() {\n    const width = this.hitStrokeWidth();\n\n    if (width === 'auto') {\n      return this.hasStroke();\n    }\n\n    return this.strokeEnabled() && !!width;\n  }\n\n  intersects(point) {\n    var stage = this.getStage(),\n        bufferHitCanvas = stage.bufferHitCanvas,\n        p;\n    bufferHitCanvas.getContext().clear();\n    this.drawHit(bufferHitCanvas, null, true);\n    p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n    return p[3] > 0;\n  }\n\n  destroy() {\n    Node.prototype.destroy.call(this);\n    delete shapes[this.colorKey];\n    delete this.colorKey;\n    return this;\n  }\n\n  _useBufferCanvas(forceFill) {\n    var _a;\n\n    if (!this.getStage()) {\n      return false;\n    }\n\n    const perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\n\n    if (!perfectDrawEnabled) {\n      return false;\n    }\n\n    const hasFill = forceFill || this.hasFill();\n    const hasStroke = this.hasStroke();\n    const isTransparent = this.getAbsoluteOpacity() !== 1;\n\n    if (hasFill && hasStroke && isTransparent) {\n      return true;\n    }\n\n    const hasShadow = this.hasShadow();\n    const strokeForShadow = this.shadowForStrokeEnabled();\n\n    if (hasFill && hasStroke && hasShadow && strokeForShadow) {\n      return true;\n    }\n\n    return false;\n  }\n\n  setStrokeHitEnabled(val) {\n    Util.warn('strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.');\n\n    if (val) {\n      this.hitStrokeWidth('auto');\n    } else {\n      this.hitStrokeWidth(0);\n    }\n  }\n\n  getStrokeHitEnabled() {\n    if (this.hitStrokeWidth() === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  getSelfRect() {\n    var size = this.size();\n    return {\n      x: this._centroid ? -size.width / 2 : 0,\n      y: this._centroid ? -size.height / 2 : 0,\n      width: size.width,\n      height: size.height\n    };\n  }\n\n  getClientRect() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const skipTransform = config.skipTransform;\n    const relativeTo = config.relativeTo;\n    const fillRect = this.getSelfRect();\n    const applyStroke = !config.skipStroke && this.hasStroke();\n    const strokeWidth = applyStroke && this.strokeWidth() || 0;\n    const fillAndStrokeWidth = fillRect.width + strokeWidth;\n    const fillAndStrokeHeight = fillRect.height + strokeWidth;\n    const applyShadow = !config.skipShadow && this.hasShadow();\n    const shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n    const shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n    const preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n    const preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n    const blurRadius = applyShadow && this.shadowBlur() || 0;\n    const width = preWidth + blurRadius * 2;\n    const height = preHeight + blurRadius * 2;\n    const rect = {\n      width: width,\n      height: height,\n      x: -(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetX, 0) + fillRect.x,\n      y: -(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetY, 0) + fillRect.y\n    };\n\n    if (!skipTransform) {\n      return this._transformedRect(rect, relativeTo);\n    }\n\n    return rect;\n  }\n\n  drawScene(can, top) {\n    var layer = this.getLayer(),\n        canvas = can || layer.getCanvas(),\n        context = canvas.getContext(),\n        cachedCanvas = this._getCanvasCache(),\n        drawFunc = this.getSceneFunc(),\n        hasShadow = this.hasShadow(),\n        stage,\n        bufferCanvas,\n        bufferContext;\n\n    var skipBuffer = canvas.isCache;\n    var cachingSelf = top === this;\n\n    if (!this.isVisible() && !cachingSelf) {\n      return this;\n    }\n\n    if (cachedCanvas) {\n      context.save();\n      var m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n      this._drawCachedSceneCanvas(context);\n\n      context.restore();\n      return this;\n    }\n\n    if (!drawFunc) {\n      return this;\n    }\n\n    context.save();\n\n    if (this._useBufferCanvas() && !skipBuffer) {\n      stage = this.getStage();\n      bufferCanvas = stage.bufferCanvas;\n      bufferContext = bufferCanvas.getContext();\n      bufferContext.clear();\n      bufferContext.save();\n\n      bufferContext._applyLineJoin(this);\n\n      var o = this.getAbsoluteTransform(top).getMatrix();\n      bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n      drawFunc.call(this, bufferContext, this);\n      bufferContext.restore();\n      var ratio = bufferCanvas.pixelRatio;\n\n      if (hasShadow) {\n        context._applyShadow(this);\n      }\n\n      context._applyOpacity(this);\n\n      context._applyGlobalCompositeOperation(this);\n\n      context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n    } else {\n      context._applyLineJoin(this);\n\n      if (!cachingSelf) {\n        var o = this.getAbsoluteTransform(top).getMatrix();\n        context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n\n        context._applyOpacity(this);\n\n        context._applyGlobalCompositeOperation(this);\n      }\n\n      if (hasShadow) {\n        context._applyShadow(this);\n      }\n\n      drawFunc.call(this, context, this);\n    }\n\n    context.restore();\n    return this;\n  }\n\n  drawHit(can, top) {\n    let skipDragCheck = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!this.shouldDrawHit(top, skipDragCheck)) {\n      return this;\n    }\n\n    var layer = this.getLayer(),\n        canvas = can || layer.hitCanvas,\n        context = canvas && canvas.getContext(),\n        drawFunc = this.hitFunc() || this.sceneFunc(),\n        cachedCanvas = this._getCanvasCache(),\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n    if (!this.colorKey) {\n      Util.warn('Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()');\n    }\n\n    if (cachedHitCanvas) {\n      context.save();\n      var m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n      this._drawCachedHitCanvas(context);\n\n      context.restore();\n      return this;\n    }\n\n    if (!drawFunc) {\n      return this;\n    }\n\n    context.save();\n\n    context._applyLineJoin(this);\n\n    const selfCache = this === top;\n\n    if (!selfCache) {\n      var o = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n    }\n\n    drawFunc.call(this, context, this);\n    context.restore();\n    return this;\n  }\n\n  drawHitFromCache() {\n    let alphaThreshold = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var cachedCanvas = this._getCanvasCache(),\n        sceneCanvas = this._getCachedSceneCanvas(),\n        hitCanvas = cachedCanvas.hit,\n        hitContext = hitCanvas.getContext(),\n        hitWidth = hitCanvas.getWidth(),\n        hitHeight = hitCanvas.getHeight(),\n        hitImageData,\n        hitData,\n        len,\n        rgbColorKey,\n        i,\n        alpha;\n\n    hitContext.clear();\n    hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n\n    try {\n      hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n      hitData = hitImageData.data;\n      len = hitData.length;\n      rgbColorKey = Util._hexToRgb(this.colorKey);\n\n      for (i = 0; i < len; i += 4) {\n        alpha = hitData[i + 3];\n\n        if (alpha > alphaThreshold) {\n          hitData[i] = rgbColorKey.r;\n          hitData[i + 1] = rgbColorKey.g;\n          hitData[i + 2] = rgbColorKey.b;\n          hitData[i + 3] = 255;\n        } else {\n          hitData[i + 3] = 0;\n        }\n      }\n\n      hitContext.putImageData(hitImageData, 0, 0);\n    } catch (e) {\n      Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\n    }\n\n    return this;\n  }\n\n  hasPointerCapture(pointerId) {\n    return PointerEvents.hasPointerCapture(pointerId, this);\n  }\n\n  setPointerCapture(pointerId) {\n    PointerEvents.setPointerCapture(pointerId, this);\n  }\n\n  releaseCapture(pointerId) {\n    PointerEvents.releaseCapture(pointerId, this);\n  }\n\n}\nShape.prototype._fillFunc = _fillFunc;\nShape.prototype._strokeFunc = _strokeFunc;\nShape.prototype._fillFuncHit = _fillFuncHit;\nShape.prototype._strokeFuncHit = _strokeFuncHit;\nShape.prototype._centroid = false;\nShape.prototype.nodeType = 'Shape';\n\n_registerNode(Shape);\n\nShape.prototype.eventListeners = {};\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva', _clearFillPatternCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva', _clearLinearGradientCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva', _clearRadialGradientCache);\nFactory.addGetterSetter(Shape, 'stroke', undefined, getStringOrGradientValidator());\nFactory.addGetterSetter(Shape, 'strokeWidth', 2, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillAfterStrokeEnabled', false);\nFactory.addGetterSetter(Shape, 'hitStrokeWidth', 'auto', getNumberOrAutoValidator());\nFactory.addGetterSetter(Shape, 'strokeHitEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, 'perfectDrawEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, 'shadowForStrokeEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, 'lineJoin');\nFactory.addGetterSetter(Shape, 'lineCap');\nFactory.addGetterSetter(Shape, 'sceneFunc');\nFactory.addGetterSetter(Shape, 'hitFunc');\nFactory.addGetterSetter(Shape, 'dash');\nFactory.addGetterSetter(Shape, 'dashOffset', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'shadowColor', undefined, getStringValidator());\nFactory.addGetterSetter(Shape, 'shadowBlur', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'shadowOpacity', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, 'shadowOffset', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'shadowOffsetX', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'shadowOffsetY', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternImage');\nFactory.addGetterSetter(Shape, 'fill', undefined, getStringOrGradientValidator());\nFactory.addGetterSetter(Shape, 'fillPatternX', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternY', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillLinearGradientColorStops');\nFactory.addGetterSetter(Shape, 'strokeLinearGradientColorStops');\nFactory.addGetterSetter(Shape, 'fillRadialGradientStartRadius', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientEndRadius', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientColorStops');\nFactory.addGetterSetter(Shape, 'fillPatternRepeat', 'repeat');\nFactory.addGetterSetter(Shape, 'fillEnabled', true);\nFactory.addGetterSetter(Shape, 'strokeEnabled', true);\nFactory.addGetterSetter(Shape, 'shadowEnabled', true);\nFactory.addGetterSetter(Shape, 'dashEnabled', true);\nFactory.addGetterSetter(Shape, 'strokeScaleEnabled', true);\nFactory.addGetterSetter(Shape, 'fillPriority', 'color');\nFactory.addComponentsGetterSetter(Shape, 'fillPatternOffset', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'fillPatternOffsetX', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternOffsetY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, 'fillPatternScale', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'fillPatternScaleX', 1, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternScaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, 'fillLinearGradientStartPoint', ['x', 'y']);\nFactory.addComponentsGetterSetter(Shape, 'strokeLinearGradientStartPoint', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'fillLinearGradientStartPointX', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientStartPointX', 0);\nFactory.addGetterSetter(Shape, 'fillLinearGradientStartPointY', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientStartPointY', 0);\nFactory.addComponentsGetterSetter(Shape, 'fillLinearGradientEndPoint', ['x', 'y']);\nFactory.addComponentsGetterSetter(Shape, 'strokeLinearGradientEndPoint', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'fillLinearGradientEndPointX', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientEndPointX', 0);\nFactory.addGetterSetter(Shape, 'fillLinearGradientEndPointY', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientEndPointY', 0);\nFactory.addComponentsGetterSetter(Shape, 'fillRadialGradientStartPoint', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'fillRadialGradientStartPointX', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientStartPointY', 0);\nFactory.addComponentsGetterSetter(Shape, 'fillRadialGradientEndPoint', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'fillRadialGradientEndPointX', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientEndPointY', 0);\nFactory.addGetterSetter(Shape, 'fillPatternRotation', 0);\nFactory.backCompat(Shape, {\n  dashArray: 'dash',\n  getDashArray: 'getDash',\n  setDashArray: 'getDash',\n  drawFunc: 'sceneFunc',\n  getDrawFunc: 'getSceneFunc',\n  setDrawFunc: 'setSceneFunc',\n  drawHitFunc: 'hitFunc',\n  getDrawHitFunc: 'getHitFunc',\n  setDrawHitFunc: 'setHitFunc'\n});","map":{"version":3,"sources":["/home/drivera1/circle_fifths/circle-fifths/node_modules/konva/lib/Shape.js"],"names":["Konva","Transform","Util","Factory","Node","getNumberValidator","getNumberOrAutoValidator","getStringValidator","getBooleanValidator","getStringOrGradientValidator","_registerNode","PointerEvents","HAS_SHADOW","SHADOW_RGBA","patternImage","linearGradient","radialGradient","dummyContext","getDummyContext","createCanvasElement","getContext","shapes","_fillFunc","context","fill","_strokeFunc","stroke","_fillFuncHit","_strokeFuncHit","_clearHasShadowCache","_clearCache","_clearGetShadowRGBACache","_clearFillPatternCache","_clearLinearGradientCache","_clearRadialGradientCache","Shape","constructor","config","key","getRandomColor","colorKey","warn","getLayer","getCanvas","getSceneFunc","attrs","sceneFunc","getHitFunc","hitFunc","hasShadow","_getCache","_hasShadow","shadowEnabled","shadowOpacity","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_getFillPattern","__getFillPattern","fillPatternImage","ctx","pattern","createPattern","fillPatternRepeat","setTransform","tr","translate","fillPatternX","fillPatternY","rotate","getAngle","fillPatternRotation","scale","fillPatternScaleX","fillPatternScaleY","fillPatternOffsetX","fillPatternOffsetY","m","getMatrix","matrix","DOMMatrix","a","b","c","d","e","f","_getLinearGradient","__getLinearGradient","colorStops","fillLinearGradientColorStops","start","fillLinearGradientStartPoint","end","fillLinearGradientEndPoint","grd","createLinearGradient","x","y","n","length","addColorStop","_getRadialGradient","__getRadialGradient","fillRadialGradientColorStops","fillRadialGradientStartPoint","fillRadialGradientEndPoint","createRadialGradient","fillRadialGradientStartRadius","fillRadialGradientEndRadius","getShadowRGBA","_getShadowRGBA","rgba","colorToRGBA","r","g","hasFill","_calculate","fillEnabled","hasStroke","strokeEnabled","strokeWidth","strokeLinearGradientColorStops","hasHitStroke","width","hitStrokeWidth","intersects","point","stage","getStage","bufferHitCanvas","p","clear","drawHit","getImageData","Math","round","data","destroy","prototype","call","_useBufferCanvas","forceFill","_a","perfectDrawEnabled","isTransparent","getAbsoluteOpacity","strokeForShadow","shadowForStrokeEnabled","setStrokeHitEnabled","val","getStrokeHitEnabled","getSelfRect","size","_centroid","height","getClientRect","skipTransform","relativeTo","fillRect","applyStroke","skipStroke","fillAndStrokeWidth","fillAndStrokeHeight","applyShadow","skipShadow","preWidth","abs","preHeight","blurRadius","rect","min","_transformedRect","drawScene","can","top","layer","canvas","cachedCanvas","_getCanvasCache","drawFunc","bufferCanvas","bufferContext","skipBuffer","isCache","cachingSelf","isVisible","save","getAbsoluteTransform","transform","_drawCachedSceneCanvas","restore","_applyLineJoin","o","ratio","pixelRatio","_applyShadow","_applyOpacity","_applyGlobalCompositeOperation","drawImage","_canvas","skipDragCheck","shouldDrawHit","hitCanvas","cachedHitCanvas","hit","_drawCachedHitCanvas","selfCache","drawHitFromCache","alphaThreshold","sceneCanvas","_getCachedSceneCanvas","hitContext","hitWidth","getWidth","hitHeight","getHeight","hitImageData","hitData","len","rgbColorKey","i","alpha","_hexToRgb","putImageData","error","message","hasPointerCapture","pointerId","setPointerCapture","releaseCapture","nodeType","eventListeners","on","addGetterSetter","undefined","addComponentsGetterSetter","backCompat","dashArray","getDashArray","setDashArray","getDrawFunc","setDrawFunc","drawHitFunc","getDrawHitFunc","setDrawHitFunc"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,WAAhC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,kBAAT,EAA6BC,wBAA7B,EAAuDC,kBAAvD,EAA2EC,mBAA3E,EAAgGC,4BAAhG,QAAqI,iBAArI;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AACA,IAAIC,UAAU,GAAG,WAAjB;AACA,IAAIC,WAAW,GAAG,YAAlB;AACA,IAAIC,YAAY,GAAG,cAAnB;AACA,IAAIC,cAAc,GAAG,gBAArB;AACA,IAAIC,cAAc,GAAG,gBAArB;AACA,IAAIC,YAAJ;;AACA,SAASC,eAAT,GAA2B;AACvB,MAAID,YAAJ,EAAkB;AACd,WAAOA,YAAP;AACH;;AACDA,EAAAA,YAAY,GAAGf,IAAI,CAACiB,mBAAL,GAA2BC,UAA3B,CAAsC,IAAtC,CAAf;AACA,SAAOH,YAAP;AACH;;AACD,OAAO,MAAMI,MAAM,GAAG,EAAf;;AACP,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AACxBA,EAAAA,OAAO,CAACC,IAAR;AACH;;AACD,SAASC,WAAT,CAAqBF,OAArB,EAA8B;AAC1BA,EAAAA,OAAO,CAACG,MAAR;AACH;;AACD,SAASC,YAAT,CAAsBJ,OAAtB,EAA+B;AAC3BA,EAAAA,OAAO,CAACC,IAAR;AACH;;AACD,SAASI,cAAT,CAAwBL,OAAxB,EAAiC;AAC7BA,EAAAA,OAAO,CAACG,MAAR;AACH;;AACD,SAASG,oBAAT,GAAgC;AAC5B,OAAKC,WAAL,CAAiBlB,UAAjB;AACH;;AACD,SAASmB,wBAAT,GAAoC;AAChC,OAAKD,WAAL,CAAiBjB,WAAjB;AACH;;AACD,SAASmB,sBAAT,GAAkC;AAC9B,OAAKF,WAAL,CAAiBhB,YAAjB;AACH;;AACD,SAASmB,yBAAT,GAAqC;AACjC,OAAKH,WAAL,CAAiBf,cAAjB;AACH;;AACD,SAASmB,yBAAT,GAAqC;AACjC,OAAKJ,WAAL,CAAiBd,cAAjB;AACH;;AACD,OAAO,MAAMmB,KAAN,SAAoB/B,IAApB,CAAyB;AAC5BgC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,UAAMA,MAAN;AACA,QAAIC,GAAJ;;AACA,WAAO,IAAP,EAAa;AACTA,MAAAA,GAAG,GAAGpC,IAAI,CAACqC,cAAL,EAAN;;AACA,UAAID,GAAG,IAAI,EAAEA,GAAG,IAAIjB,MAAT,CAAX,EAA6B;AACzB;AACH;AACJ;;AACD,SAAKmB,QAAL,GAAgBF,GAAhB;AACAjB,IAAAA,MAAM,CAACiB,GAAD,CAAN,GAAc,IAAd;AACH;;AACDlB,EAAAA,UAAU,GAAG;AACTlB,IAAAA,IAAI,CAACuC,IAAL,CAAU,gEAAV;AACA,WAAO,KAAKC,QAAL,GAAgBtB,UAAhB,EAAP;AACH;;AACDuB,EAAAA,SAAS,GAAG;AACRzC,IAAAA,IAAI,CAACuC,IAAL,CAAU,+DAAV;AACA,WAAO,KAAKC,QAAL,GAAgBC,SAAhB,EAAP;AACH;;AACDC,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKC,KAAL,CAAWC,SAAX,IAAwB,KAAK,YAAL,CAA/B;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKF,KAAL,CAAWG,OAAX,IAAsB,KAAK,UAAL,CAA7B;AACH;;AACDC,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKC,SAAL,CAAetC,UAAf,EAA2B,KAAKuC,UAAhC,CAAP;AACH;;AACDA,EAAAA,UAAU,GAAG;AACT,WAAQ,KAAKC,aAAL,MACJ,KAAKC,aAAL,OAAyB,CADrB,IAEJ,CAAC,EAAE,KAAKC,WAAL,MACC,KAAKC,UAAL,EADD,IAEC,KAAKC,aAAL,EAFD,IAGC,KAAKC,aAAL,EAHH,CAFL;AAMH;;AACDC,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKR,SAAL,CAAepC,YAAf,EAA6B,KAAK6C,gBAAlC,CAAP;AACH;;AACDA,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKC,gBAAL,EAAJ,EAA6B;AACzB,UAAIC,GAAG,GAAG3C,eAAe,EAAzB;AACA,YAAM4C,OAAO,GAAGD,GAAG,CAACE,aAAJ,CAAkB,KAAKH,gBAAL,EAAlB,EAA2C,KAAKI,iBAAL,MAA4B,QAAvE,CAAhB;;AACA,UAAIF,OAAO,IAAIA,OAAO,CAACG,YAAvB,EAAqC;AACjC,cAAMC,EAAE,GAAG,IAAIjE,SAAJ,EAAX;AACAiE,QAAAA,EAAE,CAACC,SAAH,CAAa,KAAKC,YAAL,EAAb,EAAkC,KAAKC,YAAL,EAAlC;AACAH,QAAAA,EAAE,CAACI,MAAH,CAAUtE,KAAK,CAACuE,QAAN,CAAe,KAAKC,mBAAL,EAAf,CAAV;AACAN,QAAAA,EAAE,CAACO,KAAH,CAAS,KAAKC,iBAAL,EAAT,EAAmC,KAAKC,iBAAL,EAAnC;AACAT,QAAAA,EAAE,CAACC,SAAH,CAAa,CAAC,CAAD,GAAK,KAAKS,kBAAL,EAAlB,EAA6C,CAAC,CAAD,GAAK,KAAKC,kBAAL,EAAlD;AACA,cAAMC,CAAC,GAAGZ,EAAE,CAACa,SAAH,EAAV;AACA,cAAMC,MAAM,GAAG,OAAOC,SAAP,KAAqB,WAArB,GACT;AACEC,UAAAA,CAAC,EAAEJ,CAAC,CAAC,CAAD,CADN;AAEEK,UAAAA,CAAC,EAAEL,CAAC,CAAC,CAAD,CAFN;AAGEM,UAAAA,CAAC,EAAEN,CAAC,CAAC,CAAD,CAHN;AAIEO,UAAAA,CAAC,EAAEP,CAAC,CAAC,CAAD,CAJN;AAKEQ,UAAAA,CAAC,EAAER,CAAC,CAAC,CAAD,CALN;AAMES,UAAAA,CAAC,EAAET,CAAC,CAAC,CAAD;AANN,SADS,GAST,IAAIG,SAAJ,CAAcH,CAAd,CATN;AAUAhB,QAAAA,OAAO,CAACG,YAAR,CAAqBe,MAArB;AACH;;AACD,aAAOlB,OAAP;AACH;AACJ;;AACD0B,EAAAA,kBAAkB,GAAG;AACjB,WAAO,KAAKtC,SAAL,CAAenC,cAAf,EAA+B,KAAK0E,mBAApC,CAAP;AACH;;AACDA,EAAAA,mBAAmB,GAAG;AAClB,QAAIC,UAAU,GAAG,KAAKC,4BAAL,EAAjB;;AACA,QAAID,UAAJ,EAAgB;AACZ,UAAI7B,GAAG,GAAG3C,eAAe,EAAzB;AACA,UAAI0E,KAAK,GAAG,KAAKC,4BAAL,EAAZ;AACA,UAAIC,GAAG,GAAG,KAAKC,0BAAL,EAAV;AACA,UAAIC,GAAG,GAAGnC,GAAG,CAACoC,oBAAJ,CAAyBL,KAAK,CAACM,CAA/B,EAAkCN,KAAK,CAACO,CAAxC,EAA2CL,GAAG,CAACI,CAA/C,EAAkDJ,GAAG,CAACK,CAAtD,CAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,UAAU,CAACW,MAA/B,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;AAC3CJ,QAAAA,GAAG,CAACM,YAAJ,CAAiBZ,UAAU,CAACU,CAAD,CAA3B,EAAgCV,UAAU,CAACU,CAAC,GAAG,CAAL,CAA1C;AACH;;AACD,aAAOJ,GAAP;AACH;AACJ;;AACDO,EAAAA,kBAAkB,GAAG;AACjB,WAAO,KAAKrD,SAAL,CAAelC,cAAf,EAA+B,KAAKwF,mBAApC,CAAP;AACH;;AACDA,EAAAA,mBAAmB,GAAG;AAClB,QAAId,UAAU,GAAG,KAAKe,4BAAL,EAAjB;;AACA,QAAIf,UAAJ,EAAgB;AACZ,UAAI7B,GAAG,GAAG3C,eAAe,EAAzB;AACA,UAAI0E,KAAK,GAAG,KAAKc,4BAAL,EAAZ;AACA,UAAIZ,GAAG,GAAG,KAAKa,0BAAL,EAAV;AACA,UAAIX,GAAG,GAAGnC,GAAG,CAAC+C,oBAAJ,CAAyBhB,KAAK,CAACM,CAA/B,EAAkCN,KAAK,CAACO,CAAxC,EAA2C,KAAKU,6BAAL,EAA3C,EAAiFf,GAAG,CAACI,CAArF,EAAwFJ,GAAG,CAACK,CAA5F,EAA+F,KAAKW,2BAAL,EAA/F,CAAV;;AACA,WAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,UAAU,CAACW,MAA/B,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;AAC3CJ,QAAAA,GAAG,CAACM,YAAJ,CAAiBZ,UAAU,CAACU,CAAD,CAA3B,EAAgCV,UAAU,CAACU,CAAC,GAAG,CAAL,CAA1C;AACH;;AACD,aAAOJ,GAAP;AACH;AACJ;;AACDe,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAK7D,SAAL,CAAerC,WAAf,EAA4B,KAAKmG,cAAjC,CAAP;AACH;;AACDA,EAAAA,cAAc,GAAG;AACb,QAAI,KAAK/D,SAAL,EAAJ,EAAsB;AAClB,UAAIgE,IAAI,GAAG/G,IAAI,CAACgH,WAAL,CAAiB,KAAK5D,WAAL,EAAjB,CAAX;AACA,aAAQ,UACJ2D,IAAI,CAACE,CADD,GAEJ,GAFI,GAGJF,IAAI,CAACG,CAHD,GAIJ,GAJI,GAKJH,IAAI,CAAC9B,CALD,GAMJ,GANI,GAOJ8B,IAAI,CAAC/B,CAAL,IAAU,KAAK7B,aAAL,MAAwB,CAAlC,CAPI,GAQJ,GARJ;AASH;AACJ;;AACDgE,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKC,UAAL,CAAgB,SAAhB,EAA2B,CAC9B,aAD8B,EAE9B,MAF8B,EAG9B,kBAH8B,EAI9B,8BAJ8B,EAK9B,8BAL8B,CAA3B,EAMJ,MAAM;AACL,aAAQ,KAAKC,WAAL,MACJ,CAAC,EAAE,KAAK/F,IAAL,MACC,KAAKoC,gBAAL,EADD,IAEC,KAAK+B,4BAAL,EAFD,IAGC,KAAKc,4BAAL,EAHH,CADL;AAKH,KAZM,CAAP;AAaH;;AACDe,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKF,UAAL,CAAgB,WAAhB,EAA6B,CAChC,eADgC,EAEhC,aAFgC,EAGhC,QAHgC,EAIhC,gCAJgC,CAA7B,EAKJ,MAAM;AACL,aAAQ,KAAKG,aAAL,MACJ,KAAKC,WAAL,EADI,IAEJ,CAAC,EAAE,KAAKhG,MAAL,MAAiB,KAAKiG,8BAAL,EAAnB,CAFL;AAGH,KATM,CAAP;AAUH;;AACDC,EAAAA,YAAY,GAAG;AACX,UAAMC,KAAK,GAAG,KAAKC,cAAL,EAAd;;AACA,QAAID,KAAK,KAAK,MAAd,EAAsB;AAClB,aAAO,KAAKL,SAAL,EAAP;AACH;;AACD,WAAO,KAAKC,aAAL,MAAwB,CAAC,CAACI,KAAjC;AACH;;AACDE,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACd,QAAIC,KAAK,GAAG,KAAKC,QAAL,EAAZ;AAAA,QAA6BC,eAAe,GAAGF,KAAK,CAACE,eAArD;AAAA,QAAsEC,CAAtE;AACAD,IAAAA,eAAe,CAAC/G,UAAhB,GAA6BiH,KAA7B;AACA,SAAKC,OAAL,CAAaH,eAAb,EAA8B,IAA9B,EAAoC,IAApC;AACAC,IAAAA,CAAC,GAAGD,eAAe,CAAC5G,OAAhB,CAAwBgH,YAAxB,CAAqCC,IAAI,CAACC,KAAL,CAAWT,KAAK,CAAC9B,CAAjB,CAArC,EAA0DsC,IAAI,CAACC,KAAL,CAAWT,KAAK,CAAC7B,CAAjB,CAA1D,EAA+E,CAA/E,EAAkF,CAAlF,EAAqFuC,IAAzF;AACA,WAAON,CAAC,CAAC,CAAD,CAAD,GAAO,CAAd;AACH;;AACDO,EAAAA,OAAO,GAAG;AACNvI,IAAAA,IAAI,CAACwI,SAAL,CAAeD,OAAf,CAAuBE,IAAvB,CAA4B,IAA5B;AACA,WAAOxH,MAAM,CAAC,KAAKmB,QAAN,CAAb;AACA,WAAO,KAAKA,QAAZ;AACA,WAAO,IAAP;AACH;;AACDsG,EAAAA,gBAAgB,CAACC,SAAD,EAAY;AACxB,QAAIC,EAAJ;;AACA,QAAI,CAAC,KAAKd,QAAL,EAAL,EAAsB;AAClB,aAAO,KAAP;AACH;;AACD,UAAMe,kBAAkB,GAAG,CAACD,EAAE,GAAG,KAAKnG,KAAL,CAAWoG,kBAAjB,MAAyC,IAAzC,IAAiDD,EAAE,KAAK,KAAK,CAA7D,GAAiEA,EAAjE,GAAsE,IAAjG;;AACA,QAAI,CAACC,kBAAL,EAAyB;AACrB,aAAO,KAAP;AACH;;AACD,UAAM5B,OAAO,GAAG0B,SAAS,IAAI,KAAK1B,OAAL,EAA7B;AACA,UAAMG,SAAS,GAAG,KAAKA,SAAL,EAAlB;AACA,UAAM0B,aAAa,GAAG,KAAKC,kBAAL,OAA8B,CAApD;;AACA,QAAI9B,OAAO,IAAIG,SAAX,IAAwB0B,aAA5B,EAA2C;AACvC,aAAO,IAAP;AACH;;AACD,UAAMjG,SAAS,GAAG,KAAKA,SAAL,EAAlB;AACA,UAAMmG,eAAe,GAAG,KAAKC,sBAAL,EAAxB;;AACA,QAAIhC,OAAO,IAAIG,SAAX,IAAwBvE,SAAxB,IAAqCmG,eAAzC,EAA0D;AACtD,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AACDE,EAAAA,mBAAmB,CAACC,GAAD,EAAM;AACrBrJ,IAAAA,IAAI,CAACuC,IAAL,CAAU,6EAAV;;AACA,QAAI8G,GAAJ,EAAS;AACL,WAAKzB,cAAL,CAAoB,MAApB;AACH,KAFD,MAGK;AACD,WAAKA,cAAL,CAAoB,CAApB;AACH;AACJ;;AACD0B,EAAAA,mBAAmB,GAAG;AAClB,QAAI,KAAK1B,cAAL,OAA0B,CAA9B,EAAiC;AAC7B,aAAO,KAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAP;AACH;AACJ;;AACD2B,EAAAA,WAAW,GAAG;AACV,QAAIC,IAAI,GAAG,KAAKA,IAAL,EAAX;AACA,WAAO;AACHxD,MAAAA,CAAC,EAAE,KAAKyD,SAAL,GAAiB,CAACD,IAAI,CAAC7B,KAAN,GAAc,CAA/B,GAAmC,CADnC;AAEH1B,MAAAA,CAAC,EAAE,KAAKwD,SAAL,GAAiB,CAACD,IAAI,CAACE,MAAN,GAAe,CAAhC,GAAoC,CAFpC;AAGH/B,MAAAA,KAAK,EAAE6B,IAAI,CAAC7B,KAHT;AAIH+B,MAAAA,MAAM,EAAEF,IAAI,CAACE;AAJV,KAAP;AAMH;;AACDC,EAAAA,aAAa,GAAc;AAAA,QAAbxH,MAAa,uEAAJ,EAAI;AACvB,UAAMyH,aAAa,GAAGzH,MAAM,CAACyH,aAA7B;AACA,UAAMC,UAAU,GAAG1H,MAAM,CAAC0H,UAA1B;AACA,UAAMC,QAAQ,GAAG,KAAKP,WAAL,EAAjB;AACA,UAAMQ,WAAW,GAAG,CAAC5H,MAAM,CAAC6H,UAAR,IAAsB,KAAK1C,SAAL,EAA1C;AACA,UAAME,WAAW,GAAIuC,WAAW,IAAI,KAAKvC,WAAL,EAAhB,IAAuC,CAA3D;AACA,UAAMyC,kBAAkB,GAAGH,QAAQ,CAACnC,KAAT,GAAiBH,WAA5C;AACA,UAAM0C,mBAAmB,GAAGJ,QAAQ,CAACJ,MAAT,GAAkBlC,WAA9C;AACA,UAAM2C,WAAW,GAAG,CAAChI,MAAM,CAACiI,UAAR,IAAsB,KAAKrH,SAAL,EAA1C;AACA,UAAMO,aAAa,GAAG6G,WAAW,GAAG,KAAK7G,aAAL,EAAH,GAA0B,CAA3D;AACA,UAAMC,aAAa,GAAG4G,WAAW,GAAG,KAAK5G,aAAL,EAAH,GAA0B,CAA3D;AACA,UAAM8G,QAAQ,GAAGJ,kBAAkB,GAAG3B,IAAI,CAACgC,GAAL,CAAShH,aAAT,CAAtC;AACA,UAAMiH,SAAS,GAAGL,mBAAmB,GAAG5B,IAAI,CAACgC,GAAL,CAAS/G,aAAT,CAAxC;AACA,UAAMiH,UAAU,GAAIL,WAAW,IAAI,KAAK9G,UAAL,EAAhB,IAAsC,CAAzD;AACA,UAAMsE,KAAK,GAAG0C,QAAQ,GAAGG,UAAU,GAAG,CAAtC;AACA,UAAMd,MAAM,GAAGa,SAAS,GAAGC,UAAU,GAAG,CAAxC;AACA,UAAMC,IAAI,GAAG;AACT9C,MAAAA,KAAK,EAAEA,KADE;AAET+B,MAAAA,MAAM,EAAEA,MAFC;AAGT1D,MAAAA,CAAC,EAAE,EAAEwB,WAAW,GAAG,CAAd,GAAkBgD,UAApB,IACClC,IAAI,CAACoC,GAAL,CAASpH,aAAT,EAAwB,CAAxB,CADD,GAECwG,QAAQ,CAAC9D,CALJ;AAMTC,MAAAA,CAAC,EAAE,EAAEuB,WAAW,GAAG,CAAd,GAAkBgD,UAApB,IACClC,IAAI,CAACoC,GAAL,CAASnH,aAAT,EAAwB,CAAxB,CADD,GAECuG,QAAQ,CAAC7D;AARJ,KAAb;;AAUA,QAAI,CAAC2D,aAAL,EAAoB;AAChB,aAAO,KAAKe,gBAAL,CAAsBF,IAAtB,EAA4BZ,UAA5B,CAAP;AACH;;AACD,WAAOY,IAAP;AACH;;AACDG,EAAAA,SAAS,CAACC,GAAD,EAAMC,GAAN,EAAW;AAChB,QAAIC,KAAK,GAAG,KAAKvI,QAAL,EAAZ;AAAA,QAA6BwI,MAAM,GAAGH,GAAG,IAAIE,KAAK,CAACtI,SAAN,EAA7C;AAAA,QAAgEpB,OAAO,GAAG2J,MAAM,CAAC9J,UAAP,EAA1E;AAAA,QAA+F+J,YAAY,GAAG,KAAKC,eAAL,EAA9G;AAAA,QAAsIC,QAAQ,GAAG,KAAKzI,YAAL,EAAjJ;AAAA,QAAsKK,SAAS,GAAG,KAAKA,SAAL,EAAlL;AAAA,QAAoMgF,KAApM;AAAA,QAA2MqD,YAA3M;AAAA,QAAyNC,aAAzN;;AACA,QAAIC,UAAU,GAAGN,MAAM,CAACO,OAAxB;AACA,QAAIC,WAAW,GAAGV,GAAG,KAAK,IAA1B;;AACA,QAAI,CAAC,KAAKW,SAAL,EAAD,IAAqB,CAACD,WAA1B,EAAuC;AACnC,aAAO,IAAP;AACH;;AACD,QAAIP,YAAJ,EAAkB;AACd5J,MAAAA,OAAO,CAACqK,IAAR;AACA,UAAI9G,CAAC,GAAG,KAAK+G,oBAAL,CAA0Bb,GAA1B,EAA+BjG,SAA/B,EAAR;AACAxD,MAAAA,OAAO,CAACuK,SAAR,CAAkBhH,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,EAAoCA,CAAC,CAAC,CAAD,CAArC,EAA0CA,CAAC,CAAC,CAAD,CAA3C,EAAgDA,CAAC,CAAC,CAAD,CAAjD;;AACA,WAAKiH,sBAAL,CAA4BxK,OAA5B;;AACAA,MAAAA,OAAO,CAACyK,OAAR;AACA,aAAO,IAAP;AACH;;AACD,QAAI,CAACX,QAAL,EAAe;AACX,aAAO,IAAP;AACH;;AACD9J,IAAAA,OAAO,CAACqK,IAAR;;AACA,QAAI,KAAK9C,gBAAL,MAA2B,CAAC0C,UAAhC,EAA4C;AACxCvD,MAAAA,KAAK,GAAG,KAAKC,QAAL,EAAR;AACAoD,MAAAA,YAAY,GAAGrD,KAAK,CAACqD,YAArB;AACAC,MAAAA,aAAa,GAAGD,YAAY,CAAClK,UAAb,EAAhB;AACAmK,MAAAA,aAAa,CAAClD,KAAd;AACAkD,MAAAA,aAAa,CAACK,IAAd;;AACAL,MAAAA,aAAa,CAACU,cAAd,CAA6B,IAA7B;;AACA,UAAIC,CAAC,GAAG,KAAKL,oBAAL,CAA0Bb,GAA1B,EAA+BjG,SAA/B,EAAR;AACAwG,MAAAA,aAAa,CAACO,SAAd,CAAwBI,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,EAAoCA,CAAC,CAAC,CAAD,CAArC,EAA0CA,CAAC,CAAC,CAAD,CAA3C,EAAgDA,CAAC,CAAC,CAAD,CAAjD,EAAsDA,CAAC,CAAC,CAAD,CAAvD;AACAb,MAAAA,QAAQ,CAACxC,IAAT,CAAc,IAAd,EAAoB0C,aAApB,EAAmC,IAAnC;AACAA,MAAAA,aAAa,CAACS,OAAd;AACA,UAAIG,KAAK,GAAGb,YAAY,CAACc,UAAzB;;AACA,UAAInJ,SAAJ,EAAe;AACX1B,QAAAA,OAAO,CAAC8K,YAAR,CAAqB,IAArB;AACH;;AACD9K,MAAAA,OAAO,CAAC+K,aAAR,CAAsB,IAAtB;;AACA/K,MAAAA,OAAO,CAACgL,8BAAR,CAAuC,IAAvC;;AACAhL,MAAAA,OAAO,CAACiL,SAAR,CAAkBlB,YAAY,CAACmB,OAA/B,EAAwC,CAAxC,EAA2C,CAA3C,EAA8CnB,YAAY,CAACzD,KAAb,GAAqBsE,KAAnE,EAA0Eb,YAAY,CAAC1B,MAAb,GAAsBuC,KAAhG;AACH,KAlBD,MAmBK;AACD5K,MAAAA,OAAO,CAAC0K,cAAR,CAAuB,IAAvB;;AACA,UAAI,CAACP,WAAL,EAAkB;AACd,YAAIQ,CAAC,GAAG,KAAKL,oBAAL,CAA0Bb,GAA1B,EAA+BjG,SAA/B,EAAR;AACAxD,QAAAA,OAAO,CAACuK,SAAR,CAAkBI,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,EAAoCA,CAAC,CAAC,CAAD,CAArC,EAA0CA,CAAC,CAAC,CAAD,CAA3C,EAAgDA,CAAC,CAAC,CAAD,CAAjD;;AACA3K,QAAAA,OAAO,CAAC+K,aAAR,CAAsB,IAAtB;;AACA/K,QAAAA,OAAO,CAACgL,8BAAR,CAAuC,IAAvC;AACH;;AACD,UAAItJ,SAAJ,EAAe;AACX1B,QAAAA,OAAO,CAAC8K,YAAR,CAAqB,IAArB;AACH;;AACDhB,MAAAA,QAAQ,CAACxC,IAAT,CAAc,IAAd,EAAoBtH,OAApB,EAA6B,IAA7B;AACH;;AACDA,IAAAA,OAAO,CAACyK,OAAR;AACA,WAAO,IAAP;AACH;;AACD1D,EAAAA,OAAO,CAACyC,GAAD,EAAMC,GAAN,EAAkC;AAAA,QAAvB0B,aAAuB,uEAAP,KAAO;;AACrC,QAAI,CAAC,KAAKC,aAAL,CAAmB3B,GAAnB,EAAwB0B,aAAxB,CAAL,EAA6C;AACzC,aAAO,IAAP;AACH;;AACD,QAAIzB,KAAK,GAAG,KAAKvI,QAAL,EAAZ;AAAA,QAA6BwI,MAAM,GAAGH,GAAG,IAAIE,KAAK,CAAC2B,SAAnD;AAAA,QAA8DrL,OAAO,GAAG2J,MAAM,IAAIA,MAAM,CAAC9J,UAAP,EAAlF;AAAA,QAAuGiK,QAAQ,GAAG,KAAKrI,OAAL,MAAkB,KAAKF,SAAL,EAApI;AAAA,QAAsJqI,YAAY,GAAG,KAAKC,eAAL,EAArK;AAAA,QAA6LyB,eAAe,GAAG1B,YAAY,IAAIA,YAAY,CAAC2B,GAA5O;;AACA,QAAI,CAAC,KAAKtK,QAAV,EAAoB;AAChBtC,MAAAA,IAAI,CAACuC,IAAL,CAAU,yKAAV;AACH;;AACD,QAAIoK,eAAJ,EAAqB;AACjBtL,MAAAA,OAAO,CAACqK,IAAR;AACA,UAAI9G,CAAC,GAAG,KAAK+G,oBAAL,CAA0Bb,GAA1B,EAA+BjG,SAA/B,EAAR;AACAxD,MAAAA,OAAO,CAACuK,SAAR,CAAkBhH,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,EAAoCA,CAAC,CAAC,CAAD,CAArC,EAA0CA,CAAC,CAAC,CAAD,CAA3C,EAAgDA,CAAC,CAAC,CAAD,CAAjD;;AACA,WAAKiI,oBAAL,CAA0BxL,OAA1B;;AACAA,MAAAA,OAAO,CAACyK,OAAR;AACA,aAAO,IAAP;AACH;;AACD,QAAI,CAACX,QAAL,EAAe;AACX,aAAO,IAAP;AACH;;AACD9J,IAAAA,OAAO,CAACqK,IAAR;;AACArK,IAAAA,OAAO,CAAC0K,cAAR,CAAuB,IAAvB;;AACA,UAAMe,SAAS,GAAG,SAAShC,GAA3B;;AACA,QAAI,CAACgC,SAAL,EAAgB;AACZ,UAAId,CAAC,GAAG,KAAKL,oBAAL,CAA0Bb,GAA1B,EAA+BjG,SAA/B,EAAR;AACAxD,MAAAA,OAAO,CAACuK,SAAR,CAAkBI,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,EAAoCA,CAAC,CAAC,CAAD,CAArC,EAA0CA,CAAC,CAAC,CAAD,CAA3C,EAAgDA,CAAC,CAAC,CAAD,CAAjD;AACH;;AACDb,IAAAA,QAAQ,CAACxC,IAAT,CAAc,IAAd,EAAoBtH,OAApB,EAA6B,IAA7B;AACAA,IAAAA,OAAO,CAACyK,OAAR;AACA,WAAO,IAAP;AACH;;AACDiB,EAAAA,gBAAgB,GAAqB;AAAA,QAApBC,cAAoB,uEAAH,CAAG;;AACjC,QAAI/B,YAAY,GAAG,KAAKC,eAAL,EAAnB;AAAA,QAA2C+B,WAAW,GAAG,KAAKC,qBAAL,EAAzD;AAAA,QAAuFR,SAAS,GAAGzB,YAAY,CAAC2B,GAAhH;AAAA,QAAqHO,UAAU,GAAGT,SAAS,CAACxL,UAAV,EAAlI;AAAA,QAA0JkM,QAAQ,GAAGV,SAAS,CAACW,QAAV,EAArK;AAAA,QAA2LC,SAAS,GAAGZ,SAAS,CAACa,SAAV,EAAvM;AAAA,QAA8NC,YAA9N;AAAA,QAA4OC,OAA5O;AAAA,QAAqPC,GAArP;AAAA,QAA0PC,WAA1P;AAAA,QAAuQC,CAAvQ;AAAA,QAA0QC,KAA1Q;;AACAV,IAAAA,UAAU,CAAChF,KAAX;AACAgF,IAAAA,UAAU,CAACb,SAAX,CAAqBW,WAAW,CAACV,OAAjC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgDa,QAAhD,EAA0DE,SAA1D;;AACA,QAAI;AACAE,MAAAA,YAAY,GAAGL,UAAU,CAAC9E,YAAX,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B+E,QAA9B,EAAwCE,SAAxC,CAAf;AACAG,MAAAA,OAAO,GAAGD,YAAY,CAAChF,IAAvB;AACAkF,MAAAA,GAAG,GAAGD,OAAO,CAACtH,MAAd;AACAwH,MAAAA,WAAW,GAAG3N,IAAI,CAAC8N,SAAL,CAAe,KAAKxL,QAApB,CAAd;;AACA,WAAKsL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,GAAhB,EAAqBE,CAAC,IAAI,CAA1B,EAA6B;AACzBC,QAAAA,KAAK,GAAGJ,OAAO,CAACG,CAAC,GAAG,CAAL,CAAf;;AACA,YAAIC,KAAK,GAAGb,cAAZ,EAA4B;AACxBS,UAAAA,OAAO,CAACG,CAAD,CAAP,GAAaD,WAAW,CAAC1G,CAAzB;AACAwG,UAAAA,OAAO,CAACG,CAAC,GAAG,CAAL,CAAP,GAAiBD,WAAW,CAACzG,CAA7B;AACAuG,UAAAA,OAAO,CAACG,CAAC,GAAG,CAAL,CAAP,GAAiBD,WAAW,CAAC1I,CAA7B;AACAwI,UAAAA,OAAO,CAACG,CAAC,GAAG,CAAL,CAAP,GAAiB,GAAjB;AACH,SALD,MAMK;AACDH,UAAAA,OAAO,CAACG,CAAC,GAAG,CAAL,CAAP,GAAiB,CAAjB;AACH;AACJ;;AACDT,MAAAA,UAAU,CAACY,YAAX,CAAwBP,YAAxB,EAAsC,CAAtC,EAAyC,CAAzC;AACH,KAlBD,CAmBA,OAAOpI,CAAP,EAAU;AACNpF,MAAAA,IAAI,CAACgO,KAAL,CAAW,wDAAwD5I,CAAC,CAAC6I,OAArE;AACH;;AACD,WAAO,IAAP;AACH;;AACDC,EAAAA,iBAAiB,CAACC,SAAD,EAAY;AACzB,WAAO1N,aAAa,CAACyN,iBAAd,CAAgCC,SAAhC,EAA2C,IAA3C,CAAP;AACH;;AACDC,EAAAA,iBAAiB,CAACD,SAAD,EAAY;AACzB1N,IAAAA,aAAa,CAAC2N,iBAAd,CAAgCD,SAAhC,EAA2C,IAA3C;AACH;;AACDE,EAAAA,cAAc,CAACF,SAAD,EAAY;AACtB1N,IAAAA,aAAa,CAAC4N,cAAd,CAA6BF,SAA7B,EAAwC,IAAxC;AACH;;AA1W2B;AA4WhClM,KAAK,CAACyG,SAAN,CAAgBtH,SAAhB,GAA4BA,SAA5B;AACAa,KAAK,CAACyG,SAAN,CAAgBnH,WAAhB,GAA8BA,WAA9B;AACAU,KAAK,CAACyG,SAAN,CAAgBjH,YAAhB,GAA+BA,YAA/B;AACAQ,KAAK,CAACyG,SAAN,CAAgBhH,cAAhB,GAAiCA,cAAjC;AACAO,KAAK,CAACyG,SAAN,CAAgBe,SAAhB,GAA4B,KAA5B;AACAxH,KAAK,CAACyG,SAAN,CAAgB4F,QAAhB,GAA2B,OAA3B;;AACA9N,aAAa,CAACyB,KAAD,CAAb;;AACAA,KAAK,CAACyG,SAAN,CAAgB6F,cAAhB,GAAiC,EAAjC;AACAtM,KAAK,CAACyG,SAAN,CAAgB8F,EAAhB,CAAmB7F,IAAnB,CAAwB1G,KAAK,CAACyG,SAA9B,EAAyC,6HAAzC,EAAwK/G,oBAAxK;AACAM,KAAK,CAACyG,SAAN,CAAgB8F,EAAhB,CAAmB7F,IAAnB,CAAwB1G,KAAK,CAACyG,SAA9B,EAAyC,6EAAzC,EAAwH7G,wBAAxH;AACAI,KAAK,CAACyG,SAAN,CAAgB8F,EAAhB,CAAmB7F,IAAnB,CAAwB1G,KAAK,CAACyG,SAA9B,EAAyC,iSAAzC,EAA4U5G,sBAA5U;AACAG,KAAK,CAACyG,SAAN,CAAgB8F,EAAhB,CAAmB7F,IAAnB,CAAwB1G,KAAK,CAACyG,SAA9B,EAAyC,uOAAzC,EAAkR3G,yBAAlR;AACAE,KAAK,CAACyG,SAAN,CAAgB8F,EAAhB,CAAmB7F,IAAnB,CAAwB1G,KAAK,CAACyG,SAA9B,EAAyC,yTAAzC,EAAoW1G,yBAApW;AACA/B,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,QAA/B,EAAyCyM,SAAzC,EAAoDnO,4BAA4B,EAAhF;AACAN,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,aAA/B,EAA8C,CAA9C,EAAiD9B,kBAAkB,EAAnE;AACAF,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,wBAA/B,EAAyD,KAAzD;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,gBAA/B,EAAiD,MAAjD,EAAyD7B,wBAAwB,EAAjF;AACAH,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,kBAA/B,EAAmD,IAAnD,EAAyD3B,mBAAmB,EAA5E;AACAL,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,oBAA/B,EAAqD,IAArD,EAA2D3B,mBAAmB,EAA9E;AACAL,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,wBAA/B,EAAyD,IAAzD,EAA+D3B,mBAAmB,EAAlF;AACAL,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,UAA/B;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,SAA/B;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,WAA/B;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,SAA/B;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,MAA/B;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,YAA/B,EAA6C,CAA7C,EAAgD9B,kBAAkB,EAAlE;AACAF,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,aAA/B,EAA8CyM,SAA9C,EAAyDrO,kBAAkB,EAA3E;AACAJ,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,YAA/B,EAA6C,CAA7C,EAAgD9B,kBAAkB,EAAlE;AACAF,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,eAA/B,EAAgD,CAAhD,EAAmD9B,kBAAkB,EAArE;AACAF,OAAO,CAAC0O,yBAAR,CAAkC1M,KAAlC,EAAyC,cAAzC,EAAyD,CAAC,GAAD,EAAM,GAAN,CAAzD;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,eAA/B,EAAgD,CAAhD,EAAmD9B,kBAAkB,EAArE;AACAF,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,eAA/B,EAAgD,CAAhD,EAAmD9B,kBAAkB,EAArE;AACAF,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,kBAA/B;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,MAA/B,EAAuCyM,SAAvC,EAAkDnO,4BAA4B,EAA9E;AACAN,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,cAA/B,EAA+C,CAA/C,EAAkD9B,kBAAkB,EAApE;AACAF,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,cAA/B,EAA+C,CAA/C,EAAkD9B,kBAAkB,EAApE;AACAF,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,8BAA/B;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,gCAA/B;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,+BAA/B,EAAgE,CAAhE;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,6BAA/B,EAA8D,CAA9D;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,8BAA/B;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,mBAA/B,EAAoD,QAApD;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,aAA/B,EAA8C,IAA9C;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,eAA/B,EAAgD,IAAhD;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,eAA/B,EAAgD,IAAhD;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,aAA/B,EAA8C,IAA9C;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,oBAA/B,EAAqD,IAArD;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,cAA/B,EAA+C,OAA/C;AACAhC,OAAO,CAAC0O,yBAAR,CAAkC1M,KAAlC,EAAyC,mBAAzC,EAA8D,CAAC,GAAD,EAAM,GAAN,CAA9D;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,oBAA/B,EAAqD,CAArD,EAAwD9B,kBAAkB,EAA1E;AACAF,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,oBAA/B,EAAqD,CAArD,EAAwD9B,kBAAkB,EAA1E;AACAF,OAAO,CAAC0O,yBAAR,CAAkC1M,KAAlC,EAAyC,kBAAzC,EAA6D,CAAC,GAAD,EAAM,GAAN,CAA7D;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,mBAA/B,EAAoD,CAApD,EAAuD9B,kBAAkB,EAAzE;AACAF,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,mBAA/B,EAAoD,CAApD,EAAuD9B,kBAAkB,EAAzE;AACAF,OAAO,CAAC0O,yBAAR,CAAkC1M,KAAlC,EAAyC,8BAAzC,EAAyE,CACrE,GADqE,EAErE,GAFqE,CAAzE;AAIAhC,OAAO,CAAC0O,yBAAR,CAAkC1M,KAAlC,EAAyC,gCAAzC,EAA2E,CACvE,GADuE,EAEvE,GAFuE,CAA3E;AAIAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,+BAA/B,EAAgE,CAAhE;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,iCAA/B,EAAkE,CAAlE;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,+BAA/B,EAAgE,CAAhE;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,iCAA/B,EAAkE,CAAlE;AACAhC,OAAO,CAAC0O,yBAAR,CAAkC1M,KAAlC,EAAyC,4BAAzC,EAAuE,CACnE,GADmE,EAEnE,GAFmE,CAAvE;AAIAhC,OAAO,CAAC0O,yBAAR,CAAkC1M,KAAlC,EAAyC,8BAAzC,EAAyE,CACrE,GADqE,EAErE,GAFqE,CAAzE;AAIAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,6BAA/B,EAA8D,CAA9D;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,+BAA/B,EAAgE,CAAhE;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,6BAA/B,EAA8D,CAA9D;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,+BAA/B,EAAgE,CAAhE;AACAhC,OAAO,CAAC0O,yBAAR,CAAkC1M,KAAlC,EAAyC,8BAAzC,EAAyE,CACrE,GADqE,EAErE,GAFqE,CAAzE;AAIAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,+BAA/B,EAAgE,CAAhE;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,+BAA/B,EAAgE,CAAhE;AACAhC,OAAO,CAAC0O,yBAAR,CAAkC1M,KAAlC,EAAyC,4BAAzC,EAAuE,CACnE,GADmE,EAEnE,GAFmE,CAAvE;AAIAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,6BAA/B,EAA8D,CAA9D;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,6BAA/B,EAA8D,CAA9D;AACAhC,OAAO,CAACwO,eAAR,CAAwBxM,KAAxB,EAA+B,qBAA/B,EAAsD,CAAtD;AACAhC,OAAO,CAAC2O,UAAR,CAAmB3M,KAAnB,EAA0B;AACtB4M,EAAAA,SAAS,EAAE,MADW;AAEtBC,EAAAA,YAAY,EAAE,SAFQ;AAGtBC,EAAAA,YAAY,EAAE,SAHQ;AAItB5D,EAAAA,QAAQ,EAAE,WAJY;AAKtB6D,EAAAA,WAAW,EAAE,cALS;AAMtBC,EAAAA,WAAW,EAAE,cANS;AAOtBC,EAAAA,WAAW,EAAE,SAPS;AAQtBC,EAAAA,cAAc,EAAE,YARM;AAStBC,EAAAA,cAAc,EAAE;AATM,CAA1B","sourcesContent":["import { Konva } from './Global.js';\nimport { Transform, Util } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator, getNumberOrAutoValidator, getStringValidator, getBooleanValidator, getStringOrGradientValidator, } from './Validators.js';\nimport { _registerNode } from './Global.js';\nimport * as PointerEvents from './PointerEvents.js';\nvar HAS_SHADOW = 'hasShadow';\nvar SHADOW_RGBA = 'shadowRGBA';\nvar patternImage = 'patternImage';\nvar linearGradient = 'linearGradient';\nvar radialGradient = 'radialGradient';\nlet dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util.createCanvasElement().getContext('2d');\n    return dummyContext;\n}\nexport const shapes = {};\nfunction _fillFunc(context) {\n    context.fill();\n}\nfunction _strokeFunc(context) {\n    context.stroke();\n}\nfunction _fillFuncHit(context) {\n    context.fill();\n}\nfunction _strokeFuncHit(context) {\n    context.stroke();\n}\nfunction _clearHasShadowCache() {\n    this._clearCache(HAS_SHADOW);\n}\nfunction _clearGetShadowRGBACache() {\n    this._clearCache(SHADOW_RGBA);\n}\nfunction _clearFillPatternCache() {\n    this._clearCache(patternImage);\n}\nfunction _clearLinearGradientCache() {\n    this._clearCache(linearGradient);\n}\nfunction _clearRadialGradientCache() {\n    this._clearCache(radialGradient);\n}\nexport class Shape extends Node {\n    constructor(config) {\n        super(config);\n        let key;\n        while (true) {\n            key = Util.getRandomColor();\n            if (key && !(key in shapes)) {\n                break;\n            }\n        }\n        this.colorKey = key;\n        shapes[key] = this;\n    }\n    getContext() {\n        Util.warn('shape.getContext() method is deprecated. Please do not use it.');\n        return this.getLayer().getContext();\n    }\n    getCanvas() {\n        Util.warn('shape.getCanvas() method is deprecated. Please do not use it.');\n        return this.getLayer().getCanvas();\n    }\n    getSceneFunc() {\n        return this.attrs.sceneFunc || this['_sceneFunc'];\n    }\n    getHitFunc() {\n        return this.attrs.hitFunc || this['_hitFunc'];\n    }\n    hasShadow() {\n        return this._getCache(HAS_SHADOW, this._hasShadow);\n    }\n    _hasShadow() {\n        return (this.shadowEnabled() &&\n            this.shadowOpacity() !== 0 &&\n            !!(this.shadowColor() ||\n                this.shadowBlur() ||\n                this.shadowOffsetX() ||\n                this.shadowOffsetY()));\n    }\n    _getFillPattern() {\n        return this._getCache(patternImage, this.__getFillPattern);\n    }\n    __getFillPattern() {\n        if (this.fillPatternImage()) {\n            var ctx = getDummyContext();\n            const pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || 'repeat');\n            if (pattern && pattern.setTransform) {\n                const tr = new Transform();\n                tr.translate(this.fillPatternX(), this.fillPatternY());\n                tr.rotate(Konva.getAngle(this.fillPatternRotation()));\n                tr.scale(this.fillPatternScaleX(), this.fillPatternScaleY());\n                tr.translate(-1 * this.fillPatternOffsetX(), -1 * this.fillPatternOffsetY());\n                const m = tr.getMatrix();\n                const matrix = typeof DOMMatrix === 'undefined'\n                    ? {\n                        a: m[0],\n                        b: m[1],\n                        c: m[2],\n                        d: m[3],\n                        e: m[4],\n                        f: m[5],\n                    }\n                    : new DOMMatrix(m);\n                pattern.setTransform(matrix);\n            }\n            return pattern;\n        }\n    }\n    _getLinearGradient() {\n        return this._getCache(linearGradient, this.__getLinearGradient);\n    }\n    __getLinearGradient() {\n        var colorStops = this.fillLinearGradientColorStops();\n        if (colorStops) {\n            var ctx = getDummyContext();\n            var start = this.fillLinearGradientStartPoint();\n            var end = this.fillLinearGradientEndPoint();\n            var grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    _getRadialGradient() {\n        return this._getCache(radialGradient, this.__getRadialGradient);\n    }\n    __getRadialGradient() {\n        var colorStops = this.fillRadialGradientColorStops();\n        if (colorStops) {\n            var ctx = getDummyContext();\n            var start = this.fillRadialGradientStartPoint();\n            var end = this.fillRadialGradientEndPoint();\n            var grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    getShadowRGBA() {\n        return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n    }\n    _getShadowRGBA() {\n        if (this.hasShadow()) {\n            var rgba = Util.colorToRGBA(this.shadowColor());\n            return ('rgba(' +\n                rgba.r +\n                ',' +\n                rgba.g +\n                ',' +\n                rgba.b +\n                ',' +\n                rgba.a * (this.shadowOpacity() || 1) +\n                ')');\n        }\n    }\n    hasFill() {\n        return this._calculate('hasFill', [\n            'fillEnabled',\n            'fill',\n            'fillPatternImage',\n            'fillLinearGradientColorStops',\n            'fillRadialGradientColorStops',\n        ], () => {\n            return (this.fillEnabled() &&\n                !!(this.fill() ||\n                    this.fillPatternImage() ||\n                    this.fillLinearGradientColorStops() ||\n                    this.fillRadialGradientColorStops()));\n        });\n    }\n    hasStroke() {\n        return this._calculate('hasStroke', [\n            'strokeEnabled',\n            'strokeWidth',\n            'stroke',\n            'strokeLinearGradientColorStops',\n        ], () => {\n            return (this.strokeEnabled() &&\n                this.strokeWidth() &&\n                !!(this.stroke() || this.strokeLinearGradientColorStops()));\n        });\n    }\n    hasHitStroke() {\n        const width = this.hitStrokeWidth();\n        if (width === 'auto') {\n            return this.hasStroke();\n        }\n        return this.strokeEnabled() && !!width;\n    }\n    intersects(point) {\n        var stage = this.getStage(), bufferHitCanvas = stage.bufferHitCanvas, p;\n        bufferHitCanvas.getContext().clear();\n        this.drawHit(bufferHitCanvas, null, true);\n        p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n        return p[3] > 0;\n    }\n    destroy() {\n        Node.prototype.destroy.call(this);\n        delete shapes[this.colorKey];\n        delete this.colorKey;\n        return this;\n    }\n    _useBufferCanvas(forceFill) {\n        var _a;\n        if (!this.getStage()) {\n            return false;\n        }\n        const perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\n        if (!perfectDrawEnabled) {\n            return false;\n        }\n        const hasFill = forceFill || this.hasFill();\n        const hasStroke = this.hasStroke();\n        const isTransparent = this.getAbsoluteOpacity() !== 1;\n        if (hasFill && hasStroke && isTransparent) {\n            return true;\n        }\n        const hasShadow = this.hasShadow();\n        const strokeForShadow = this.shadowForStrokeEnabled();\n        if (hasFill && hasStroke && hasShadow && strokeForShadow) {\n            return true;\n        }\n        return false;\n    }\n    setStrokeHitEnabled(val) {\n        Util.warn('strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.');\n        if (val) {\n            this.hitStrokeWidth('auto');\n        }\n        else {\n            this.hitStrokeWidth(0);\n        }\n    }\n    getStrokeHitEnabled() {\n        if (this.hitStrokeWidth() === 0) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    getSelfRect() {\n        var size = this.size();\n        return {\n            x: this._centroid ? -size.width / 2 : 0,\n            y: this._centroid ? -size.height / 2 : 0,\n            width: size.width,\n            height: size.height,\n        };\n    }\n    getClientRect(config = {}) {\n        const skipTransform = config.skipTransform;\n        const relativeTo = config.relativeTo;\n        const fillRect = this.getSelfRect();\n        const applyStroke = !config.skipStroke && this.hasStroke();\n        const strokeWidth = (applyStroke && this.strokeWidth()) || 0;\n        const fillAndStrokeWidth = fillRect.width + strokeWidth;\n        const fillAndStrokeHeight = fillRect.height + strokeWidth;\n        const applyShadow = !config.skipShadow && this.hasShadow();\n        const shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n        const shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n        const preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n        const preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n        const blurRadius = (applyShadow && this.shadowBlur()) || 0;\n        const width = preWidth + blurRadius * 2;\n        const height = preHeight + blurRadius * 2;\n        const rect = {\n            width: width,\n            height: height,\n            x: -(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetX, 0) +\n                fillRect.x,\n            y: -(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetY, 0) +\n                fillRect.y,\n        };\n        if (!skipTransform) {\n            return this._transformedRect(rect, relativeTo);\n        }\n        return rect;\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || layer.getCanvas(), context = canvas.getContext(), cachedCanvas = this._getCanvasCache(), drawFunc = this.getSceneFunc(), hasShadow = this.hasShadow(), stage, bufferCanvas, bufferContext;\n        var skipBuffer = canvas.isCache;\n        var cachingSelf = top === this;\n        if (!this.isVisible() && !cachingSelf) {\n            return this;\n        }\n        if (cachedCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        if (this._useBufferCanvas() && !skipBuffer) {\n            stage = this.getStage();\n            bufferCanvas = stage.bufferCanvas;\n            bufferContext = bufferCanvas.getContext();\n            bufferContext.clear();\n            bufferContext.save();\n            bufferContext._applyLineJoin(this);\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n            drawFunc.call(this, bufferContext, this);\n            bufferContext.restore();\n            var ratio = bufferCanvas.pixelRatio;\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n            context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n        }\n        else {\n            context._applyLineJoin(this);\n            if (!cachingSelf) {\n                var o = this.getAbsoluteTransform(top).getMatrix();\n                context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n                context._applyOpacity(this);\n                context._applyGlobalCompositeOperation(this);\n            }\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            drawFunc.call(this, context, this);\n        }\n        context.restore();\n        return this;\n    }\n    drawHit(can, top, skipDragCheck = false) {\n        if (!this.shouldDrawHit(top, skipDragCheck)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || layer.hitCanvas, context = canvas && canvas.getContext(), drawFunc = this.hitFunc() || this.sceneFunc(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (!this.colorKey) {\n            Util.warn('Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()');\n        }\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        context._applyLineJoin(this);\n        const selfCache = this === top;\n        if (!selfCache) {\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        }\n        drawFunc.call(this, context, this);\n        context.restore();\n        return this;\n    }\n    drawHitFromCache(alphaThreshold = 0) {\n        var cachedCanvas = this._getCanvasCache(), sceneCanvas = this._getCachedSceneCanvas(), hitCanvas = cachedCanvas.hit, hitContext = hitCanvas.getContext(), hitWidth = hitCanvas.getWidth(), hitHeight = hitCanvas.getHeight(), hitImageData, hitData, len, rgbColorKey, i, alpha;\n        hitContext.clear();\n        hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n        try {\n            hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n            hitData = hitImageData.data;\n            len = hitData.length;\n            rgbColorKey = Util._hexToRgb(this.colorKey);\n            for (i = 0; i < len; i += 4) {\n                alpha = hitData[i + 3];\n                if (alpha > alphaThreshold) {\n                    hitData[i] = rgbColorKey.r;\n                    hitData[i + 1] = rgbColorKey.g;\n                    hitData[i + 2] = rgbColorKey.b;\n                    hitData[i + 3] = 255;\n                }\n                else {\n                    hitData[i + 3] = 0;\n                }\n            }\n            hitContext.putImageData(hitImageData, 0, 0);\n        }\n        catch (e) {\n            Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\n        }\n        return this;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n}\nShape.prototype._fillFunc = _fillFunc;\nShape.prototype._strokeFunc = _strokeFunc;\nShape.prototype._fillFuncHit = _fillFuncHit;\nShape.prototype._strokeFuncHit = _strokeFuncHit;\nShape.prototype._centroid = false;\nShape.prototype.nodeType = 'Shape';\n_registerNode(Shape);\nShape.prototype.eventListeners = {};\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva', _clearFillPatternCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva', _clearLinearGradientCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva', _clearRadialGradientCache);\nFactory.addGetterSetter(Shape, 'stroke', undefined, getStringOrGradientValidator());\nFactory.addGetterSetter(Shape, 'strokeWidth', 2, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillAfterStrokeEnabled', false);\nFactory.addGetterSetter(Shape, 'hitStrokeWidth', 'auto', getNumberOrAutoValidator());\nFactory.addGetterSetter(Shape, 'strokeHitEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, 'perfectDrawEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, 'shadowForStrokeEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, 'lineJoin');\nFactory.addGetterSetter(Shape, 'lineCap');\nFactory.addGetterSetter(Shape, 'sceneFunc');\nFactory.addGetterSetter(Shape, 'hitFunc');\nFactory.addGetterSetter(Shape, 'dash');\nFactory.addGetterSetter(Shape, 'dashOffset', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'shadowColor', undefined, getStringValidator());\nFactory.addGetterSetter(Shape, 'shadowBlur', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'shadowOpacity', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, 'shadowOffset', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'shadowOffsetX', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'shadowOffsetY', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternImage');\nFactory.addGetterSetter(Shape, 'fill', undefined, getStringOrGradientValidator());\nFactory.addGetterSetter(Shape, 'fillPatternX', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternY', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillLinearGradientColorStops');\nFactory.addGetterSetter(Shape, 'strokeLinearGradientColorStops');\nFactory.addGetterSetter(Shape, 'fillRadialGradientStartRadius', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientEndRadius', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientColorStops');\nFactory.addGetterSetter(Shape, 'fillPatternRepeat', 'repeat');\nFactory.addGetterSetter(Shape, 'fillEnabled', true);\nFactory.addGetterSetter(Shape, 'strokeEnabled', true);\nFactory.addGetterSetter(Shape, 'shadowEnabled', true);\nFactory.addGetterSetter(Shape, 'dashEnabled', true);\nFactory.addGetterSetter(Shape, 'strokeScaleEnabled', true);\nFactory.addGetterSetter(Shape, 'fillPriority', 'color');\nFactory.addComponentsGetterSetter(Shape, 'fillPatternOffset', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'fillPatternOffsetX', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternOffsetY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, 'fillPatternScale', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'fillPatternScaleX', 1, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternScaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, 'fillLinearGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory.addComponentsGetterSetter(Shape, 'strokeLinearGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory.addGetterSetter(Shape, 'fillLinearGradientStartPointX', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientStartPointX', 0);\nFactory.addGetterSetter(Shape, 'fillLinearGradientStartPointY', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientStartPointY', 0);\nFactory.addComponentsGetterSetter(Shape, 'fillLinearGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory.addComponentsGetterSetter(Shape, 'strokeLinearGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory.addGetterSetter(Shape, 'fillLinearGradientEndPointX', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientEndPointX', 0);\nFactory.addGetterSetter(Shape, 'fillLinearGradientEndPointY', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientEndPointY', 0);\nFactory.addComponentsGetterSetter(Shape, 'fillRadialGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory.addGetterSetter(Shape, 'fillRadialGradientStartPointX', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientStartPointY', 0);\nFactory.addComponentsGetterSetter(Shape, 'fillRadialGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory.addGetterSetter(Shape, 'fillRadialGradientEndPointX', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientEndPointY', 0);\nFactory.addGetterSetter(Shape, 'fillPatternRotation', 0);\nFactory.backCompat(Shape, {\n    dashArray: 'dash',\n    getDashArray: 'getDash',\n    setDashArray: 'getDash',\n    drawFunc: 'sceneFunc',\n    getDrawFunc: 'getSceneFunc',\n    setDrawFunc: 'setSceneFunc',\n    drawHitFunc: 'hitFunc',\n    getDrawHitFunc: 'getHitFunc',\n    setDrawHitFunc: 'setHitFunc',\n});\n"]},"metadata":{},"sourceType":"module"}